{
  "openapi": "3.0.0",
  "info": {
    "title": "Samad Specs API",
    "version": "1.0.0",
    "description": ""
  },
  "tags": [
    {
      "name": "Authentication"
    }
  ],
  "components": {
    "responses": {
      "ValidationError": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad Request"
                },
                "errors": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "errors": {
                  "type": "string",
                  "example": "Invalid Credentials"
                }
              }
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "errors": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "UserProfile": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "role": {
                "type": "string",
                "example": "admin"
              },
              "username": {
                "type": "string"
              },
              "name": {
                "type": "string",
                "example": "admin"
              },
              "userJobLocation": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 12
                    },
                    "name": {
                      "type": "string",
                      "example": "test"
                    },
                    "address": {
                      "type": "string",
                      "example": "some address"
                    },
                    "userId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "50b705cb-ddc7-4578-bfeb-f3ffc777b110"
                    }
                  }
                }
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-08-03T00:41:37.180Z"
              }
            }
          }
        }
      },
      "MetaPagination": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "number",
            "example": 1
          },
          "currentIndex": {
            "type": "number",
            "example": 1
          },
          "prevIndex": {
            "type": "number",
            "example": 0
          },
          "nextIndex": {
            "type": "number",
            "example": 1
          },
          "totalPage": {
            "type": "number",
            "example": 10
          }
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@mail.com"
          },
          "username": {
            "type": "string",
            "example": "User"
          }
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "569e5ceb-185c-4ab3-94d7-511a2d63b2ca"
          },
          "name": {
            "type": "string",
            "example": "John Edit"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "example": "+62 Edit"
          },
          "address": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-08-03T00:43:39.276Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-08-03T01:28:29.914Z"
          },
          "updatedById": {
            "type": "string",
            "format": "uuid",
            "example": "50b705cb-ddc7-4578-bfeb-f3ffc777b110"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "PROCESSING", "COMPLETED", "CANCELLED"]
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "productOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "updatedBy": {
            "$ref": "#/components/schemas/Admin"
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "quantity": {
            "type": "integer"
          },
          "price": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "DataPagination": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "shopId": {
              "type": "integer"
            },
            "subTotal": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            },
            "updatedById": {
              "type": "string",
              "nullable": true
            },
            "customerId": {
              "type": "string",
              "format": "uuid"
            },
            "updatedBy": {
              "type": "object",
              "nullable": true
            },
            "shop": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "customer": {
              "$ref": "#/components/schemas/Customer"
            },
            "productOrder": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OrderItem"
              }
            },
            "orderId": {
              "type": "string",
              "format": "uuid"
            },
            "quantity": {
              "type": "integer"
            },
            "productId": {
              "type": "integer"
            }
          }
        }
      },
      "Shop": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "CreateShopInput": {
        "type": "object",
        "required": ["name", "address"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the shop",
            "minLength": 1
          },
          "address": {
            "type": "string",
            "description": "Address of the shop",
            "minLength": 1
          }
        }
      },
      "CreateOrderInput": {
        "type": "object",
        "required": ["name", "products"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "shopId": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "products": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": ["name", "price", "quantity"],
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "price": {
                  "type": "number",
                  "minimum": 100
                },
                "quantity": {
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "example": "johnll21"
          },
          "password": {
            "minLength": 8,
            "type": "string",
            "example": "somepassword8"
          },
          "role": {
            "type": "string",
            "example": "user | admin"
          }
        }
      },
      "CreateProductOrderSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "price": {
            "type": "number",
            "minimum": 100
          },
          "quantity": {
            "type": "number",
            "minimum": 1
          }
        },
        "required": ["name", "price", "quantity"]
      },
      "UpdateOrderInputDto": {
        "type": "object",
        "properties": {
          "create": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrderInput"
            }
          },
          "update": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/CreateProductOrderSchema"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              ]
            }
          },
          "delete": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NotFoundSourceUpdate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 400
          },
          "message": {
            "type": "string",
            "example": "Bad request"
          },
          "errors": {
            "type": "string",
            "example": "Action failed"
          }
        }
      }
    },
    "securitySchemes": {
      "accessToken": {
        "in": "cookie",
        "type": "apiKey",
        "name": "Access Token",
        "description": "JWT access token stored in a cookie named `id`"
      },
      "refreshTokenAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Refresh Token",
        "description": "JWT access token stored in a cookie named `rid`"
      }
    }
  },
  "paths": {
    "/auth/v1/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Perform Login, return access token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "admin"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Set-Cookie": {
                "description": "Set Cookie JWT Token",
                "schema": {
                  "type": "string",
                  "example": "id=<EXAMPLE_JWT_ACCESS>&rid=<EXAMPLE_JWT_REFRESH>"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Login successful"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Fobidded Unauthenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 403,
                    "message": "Unauthorized",
                    "errors": "Invalid Credential"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 500,
                    "message": "Internal Server Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/v1/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Perform Logout, clean jwt's session",
        "responses": {
          "204": {
            "description": "Ok, No Content"
          }
        }
      }
    },
    "/api/v1/user": {
      "get": {
        "tags": ["User"],
        "summary": "Returns lists of Users",
        "security": [
          {
            "accessToken": []
          },
          {
            "refreshTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 200,
                    "data": [
                      {
                        "id": "clz3w8mkk0000rdallmilt36e",
                        "email": null,
                        "name": "John",
                        "username": "admin",
                        "role": "admin",
                        "createdAt": "2024-07-27T08:52:56.517Z",
                        "updatedAt": "2024-07-27T08:52:38.085Z"
                      }
                    ],
                    "meta": {
                      "count": 1
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create User",
        "security": [
          {
            "accessToken": []
          },
          {
            "refreshTokenAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User",
                "required": ["name", "username", "password", "role"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 201,
                    "message": "User created successfully"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 400,
                    "message": "Bad Request",
                    "errors": "Comma separated Validation error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{id}": {
      "put": {
        "tags": ["User"],
        "summary": "Update a user",
        "security": [
          {
            "accessToken": []
          },
          {
            "refreshTokenAuth": []
          }
        ],
        "x-roles": ["Admin"],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Ok, dont have response"
          },
          "400": {
            "description": "Bad Request, validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 400,
                    "message": "Bad Request",
                    "errors": "Comma separated Validation error"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 400,
                    "message": "Not found",
                    "errors": "Update failed"
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Update a user",
        "security": [
          {
            "accessToken": []
          },
          {
            "refreshTokenAuth": []
          }
        ],
        "x-roles": ["Admin"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted, dont have response"
          },
          "404": {
            "description": "Not found resource to update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "code": 404,
                    "message": "Bad Request",
                    "errors": "Delete failed"
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  }
}
